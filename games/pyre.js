setLegend({
    '1': bitmap`
................
................
.....3.3........
....3.....3.....
...3.3.3.3.3....
..3.3.3.3.3.....
...3.333.3...3..
..3.3.3.3...3...
.3.333.3.....3..
..3.333.3.3.3...
.3...3.3.3.3.3..
......3.333.3...
...3.333.3.3....
....3.333.......
.......3........
................
`,
    '2': bitmap`
................
................
........3.3.....
.....3.....3....
....3.3.3.3.3...
.....3.3.3.3.3..
..3...3.333.3...
...3...3.3.3.3..
..3.....3.333.3.
...3.3.3.333.3..
..3.3.3.3.3...3.
...3.333.3......
....3.3.333.3...
.......333.3....
........3.......
................`,
    '3': bitmap`
................
......3.3.......
.3.3.3.3........
..3.3.....3.3...
.3.3.3.3.3.3....
..3.3.3.3.3.....
.3.33333.3...3..
..3.333.3...3.3.
.3.333.3.....3..
3.3.333.3.3.3.3.
.3...333.333.3..
....3.33333.3.3.
...3.33333.3.3..
....3.333.3.3...
.......3........
................`,
    '4': bitmap`
................
.......3.3......
........3.3.3.3.
...3.3.....3.3..
....3.3.3.3.3.3.
.....3.3.3.3.3..
..3...3.33333.3.
.3.3...3.333.3..
..3.....3.333.3.
.3.3.3.3.333.3.3
..3.333.333...3.
.3.3.33333.3....
..3.3.33333.3...
...3.3.333.3....
........3.......
................`,
    'f': anyOf('1', '2'),
    'l': bitmap`
................
................
..........44....
........44..4...
......44.....4..
.....4.......4..
....4........4..
...4.........4..
..4444......4...
.44..44....4....
.4....4...4.....
.4....4..4......
.4....4.4.......
..4...44........
...444..........
................`,
    'p': bitmap`
................
................
..........44....
........44..4...
......44.....4..
.....4.......4..
....4........4..
...4.........4..
..4444......4...
.44..44....40...
.40..04...4.0...
.4....4..4..0...
.4.00.4.40.0....
..4...44.0......
...444..0.......
................`,
    c: bitmap`
......4444......
....44....44....
..44........44..
.4............4.
4.44........44.4
4...44....44...4
4.4...4444...4.4
4...4...4....4.4
4.4.4.4.4.4..4.4
4.4.4...4......4
4.....4.4.4..4.4
.4..4.4.4.4...4.
..44....4...44..
....44..4.44....
......4444......
................`,  
    'h': bitmap`
................
................
................
................
........5.......
......55.55.....
....55.....55...
...5.........5..
..5...........5.
....555555555...
.....5.....5....
....5.......5...
...5.........5..
...5.........5..
..5....555....5.
...555.555.555..`,
    'g': bitmap`
..4.........4...
...4.........4..
...44........4..
....4.........4.
....44........4.
.....4........4.
.....44......4..
.....44...4.....
.....444...4....
4.....44....4...
.4....44....4...
.4...444.....4..
.4...44......4..
.4...........4..
4...........4...
................`
})

const log = x => (console.log(x), x);

const isGrass = ({ type }) => type == "g";

const burnsBig = ({ type }) => "lc".split('').includes(type);
const needsBigFire = ({ type }) => type == "h";
const fireKinds = ["1", "2", "3", "4"];
const isFire = ({ type }) => fireKinds.includes(type);
const isSmallFire = ({ type }) => ["1", "2"].includes(type);
const fire = () => fireKinds.flatMap(getAll);

const neighbors = ({ x, y }) => [getTile(x+1, y+0),
                                 getTile(x-1, y+0),
                                 getTile(x+0, y+1),
                                 getTile(x+0, y-1)];
let tick = 0;
const ticker = window.activeTicker = setInterval(() => {
    if (window.activeTicker != ticker) return clearInterval(ticker);

    /* fire flicker */
    tick++;
     (tick % 2) ? replace("1", "2") : replace("2", "1");
    !(tick % 2) ? replace("3", "4") : replace("4", "3");

    /* fire spread */
    if (tick % 4 == 0)
        for (const f of fire()) for (const s of neighbors(f)) {
            if (!s || s.some(isFire)) continue;
            const [t] = s;
            if (!t) continue;
            if (needsBigFire(t) && isSmallFire(f)) continue;
            t.type = burnsBig(t) ? "3" : "1";

            setTimeout(() => clearTile(t.x, t.y), 1000);
        }

    if (match("h").length == 0 && fire().length == 0)
        levels[1+level] && startLevel(levels[++level]);
}, 200);

afterInput(() => {
    /* crate kill grass */
    for (const { x, y } of getAll('c'))
        for (const g of getTile(x, y).filter(isGrass))
            g.remove();
})

/* we have to wrap setMap so we can make sure fires die */
const startLevel = (m) => {
    setMap(m);
    
    for (const f of fire())
        setTimeout(() => clearTile(f.x, f.y), 1000);
};

let level = 0;
const levels = [
    map`
.........
...g.g...
..gg.gg..
.gg...g..
..1...gl.
......ll.
..lllll..
..hl...p.
.........`,
    map`
.........
..gg.....
.gggg....
.ghgg....
.ggg..c..
gggg.....
gg...p...
g1.......
.........`,
    map`
..llllggg
........g
........g
..h.....g
......c.g
..p.....g
........g
.......gg
.1gggggg.`,
]
// .reverse();
startLevel(levels[level]);
setSolids(["p", "l", "c"]);
setPushables({ p: ["c"] })
onInput( "left", () => getFirst("p").x--)
onInput("right", () => getFirst("p").x++)
onInput(   "up", () => getFirst("p").y--)
onInput( "down", () => getFirst("p").y++)
onInput(    "j", () => startLevel(levels[level]));
